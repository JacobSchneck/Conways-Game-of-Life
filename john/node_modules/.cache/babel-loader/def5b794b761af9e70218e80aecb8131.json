{"ast":null,"code":"/*\n@params: grid: boolean[][], int row, int col\n@result: number of alive adjacent cells\n*/\nexport const getCellsAlive = (grid, row, col) => {\n  let result = 0;\n\n  for (let i = row > 0 ? -1 : 0; i < (row < grid.length - 1 ? 2 : 1); i++) {\n    for (let j = col > 0 ? -1 : 0; j < (col < grid[0].length - 1 ? 2 : 1); j++) {\n      if (i === 0 && j === 0) {\n        continue;\n      }\n\n      const x = row + i;\n      const y = col + j;\n\n      if (grid[x][y] === true) {\n        result += 1;\n      }\n    }\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/utils.ts"],"names":["getCellsAlive","grid","row","col","result","i","length","j","x","y"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,IAAD,EAAoBC,GAApB,EAAiCC,GAAjC,KAAyD;AACrF,MAAIC,MAAM,GAAG,CAAb;;AACA,OAAK,IAAIC,CAAC,GAAIH,GAAG,GAAG,CAAN,GAAU,CAAC,CAAX,GAAe,CAA7B,EAAiCG,CAAC,IAAIH,GAAG,GAAGD,IAAI,CAACK,MAAL,GAAc,CAApB,GAAwB,CAAxB,GAA4B,CAAhC,CAAlC,EAAsED,CAAC,EAAvE,EAA2E;AAC1E,SAAK,IAAIE,CAAC,GAAIJ,GAAG,GAAG,CAAN,GAAU,CAAC,CAAX,GAAe,CAA7B,EAAiCI,CAAC,IAAIJ,GAAG,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQK,MAAR,GAAiB,CAAvB,GAA2B,CAA3B,GAA+B,CAAnC,CAAlC,EAAyEC,CAAC,EAA1E,EAA8E;AAC7E,UAAIF,CAAC,KAAK,CAAN,IAAWE,CAAC,KAAK,CAArB,EAAwB;AACxB;AACC;;AACD,YAAMC,CAAC,GAAGN,GAAG,GAAGG,CAAhB;AACA,YAAMI,CAAC,GAAGN,GAAG,GAAGI,CAAhB;;AACA,UAAIN,IAAI,CAACO,CAAD,CAAJ,CAAQC,CAAR,MAAe,IAAnB,EAAyB;AACzBL,QAAAA,MAAM,IAAI,CAAV;AACC;AACD;AACD;;AACD,SAAOA,MAAP;AACA,CAfM","sourcesContent":["/*\n@params: grid: boolean[][], int row, int col\n@result: number of alive adjacent cells\n*/\nexport const getCellsAlive = (grid: boolean[][], row: number, col: number): number => {\n\tlet result = 0;\n\tfor (let i = (row > 0 ? -1 : 0); i < (row < grid.length - 1 ? 2 : 1); i++) {\n\t\tfor (let j = (col > 0 ? -1 : 0); j < (col < grid[0].length - 1 ? 2 : 1); j++) {\n\t\t\tif (i === 0 && j === 0) {\n\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst x = row + i;\n\t\t\tconst y = col + j;\n\t\t\tif (grid[x][y] === true) {\n\t\t\tresult += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}"]},"metadata":{},"sourceType":"module"}