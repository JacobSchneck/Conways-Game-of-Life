{"ast":null,"code":"var _jsxFileName = \"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Board.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport BoardButton from './Tile';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  _s();\n\n  const [grid, setGrid] = useState(Array(50).fill(Array(75).fill(0)));\n\n  const handleTileEvent = (i, j) => {\n    let gridCopy = grid.map(arr => arr.slice());\n    gridCopy[i][j] = grid[i][j] ? false : true;\n    setGrid(gridCopy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        float: \"left\",\n        margin: \"10%\"\n      },\n      children: \"Iteration:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${grid[0].length}, 20px`,\n        justifyContent: \"center\"\n      },\n      children: grid.map((row, i) => {\n        return grid[i].map((val, j) => {\n          return /*#__PURE__*/_jsxDEV(BoardButton, {\n            keyID: `${i}-${j}`,\n            tileName: grid[i][j] ? \"tile-on\" : \"tile-off\",\n            onClick: () => handleTileEvent(i, j)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this);\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margin: \"10%\"\n      },\n      children: \"Cells Alive:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Board, \"Qohgl01/CMkhflAzkpbuacQzt9Y=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Board.tsx"],"names":["React","useState","BoardButton","Board","grid","setGrid","Array","fill","handleTileEvent","i","j","gridCopy","map","arr","slice","float","margin","display","gridTemplateColumns","length","justifyContent","row","val"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,QAAxB;AACA,OAAO,cAAP;;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAcK,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAeD,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,CAAf,CAAf,CAAd,CAAhC;;AAEA,QAAMC,eAAe,GAAG,CAACC,CAAD,EAAYC,CAAZ,KAA0B;AACjD,QAAIC,QAAqB,GAAGP,IAAI,CAACQ,GAAL,CAASC,GAAG,IAAIA,GAAG,CAACC,KAAJ,EAAhB,CAA5B;AACAH,IAAAA,QAAQ,CAACF,CAAD,CAAR,CAAYC,CAAZ,IAAiBN,IAAI,CAACK,CAAD,CAAJ,CAAQC,CAAR,IAAa,KAAb,GAAqB,IAAtC;AACAL,IAAAA,OAAO,CAACM,QAAD,CAAP;AACA,GAJD;;AAMA,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACC;AAAI,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,MAAM,EAAE;AAAxB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAIC;AACC,MAAA,KAAK,EAAE;AACNC,QAAAA,OAAO,EAAE,MADH;AAENC,QAAAA,mBAAmB,EAAG,UAASd,IAAI,CAAC,CAAD,CAAJ,CAAQe,MAAO,QAFxC;AAGNC,QAAAA,cAAc,EAAE;AAHV,OADR;AAAA,gBAOGhB,IAAI,CAACQ,GAAL,CAAU,CAACS,GAAD,EAAMZ,CAAN,KAAY;AACvB,eACCL,IAAI,CAACK,CAAD,CAAJ,CAAQG,GAAR,CAAa,CAACU,GAAD,EAAMZ,CAAN,KAAY;AACxB,8BACC,QAAC,WAAD;AACC,YAAA,KAAK,EAAG,GAAED,CAAE,IAAGC,CAAE,EADlB;AAEC,YAAA,QAAQ,EAAEN,IAAI,CAACK,CAAD,CAAJ,CAAQC,CAAR,IAAa,SAAb,GAAyB,UAFpC;AAGC,YAAA,OAAO,EAAE,MAAMF,eAAe,CAACC,CAAD,EAAIC,CAAJ;AAH/B;AAAA;AAAA;AAAA;AAAA,kBADD;AAOA,SARD,CADD;AAWA,OAZC;AAPH;AAAA;AAAA;AAAA;AAAA,YAJD,eAyBC;AAAI,MAAA,KAAK,EAAE;AAACM,QAAAA,MAAM,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA+BA,CAxCD;;GAAMb,K;;KAAAA,K;AA0CN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport BoardButton from './Tile';\nimport \"./styles.css\";\n\nconst Board: React.FC = () => {\n\tconst [grid, setGrid] = useState<boolean[][]>(Array(50).fill(Array(75).fill(0)))\n\n\tconst handleTileEvent = (i: number, j: number) => {\n\t\tlet gridCopy: boolean[][] = grid.map(arr => arr.slice());\n\t\tgridCopy[i][j] = grid[i][j] ? false : true;\n\t\tsetGrid(gridCopy);\n\t}\n\n\treturn (\n\t\t<div className=\"board-container\">\n\t\t\t<h1 style={{float: \"left\", margin: \"10%\"}}>\n\t\t\t\tIteration: \n\t\t\t</h1>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"grid\",\n\t\t\t\t\tgridTemplateColumns: `repeat(${grid[0].length}, 20px`,\n\t\t\t\t\tjustifyContent: \"center\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{ grid.map( (row, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tgrid[i].map( (val, j) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<BoardButton \n\t\t\t\t\t\t\t\t\tkeyID={`${i}-${j}`} \n\t\t\t\t\t\t\t\t\ttileName={grid[i][j] ? \"tile-on\" : \"tile-off\"}\t\n\t\t\t\t\t\t\t\t\tonClick={() => handleTileEvent(i, j)} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}) }\n\t\t\t</div>\n\t\t\t<h1 style={{margin: \"10%\"}}>\n\t\t\t\tCells Alive: \n\t\t\t</h1>\n\t\t</div>\n\t)\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}