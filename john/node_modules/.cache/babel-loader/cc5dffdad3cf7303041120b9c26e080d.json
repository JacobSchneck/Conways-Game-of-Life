{"ast":null,"code":"import React from'react';import BoardButton from'./Tile';import\"./styles.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Board=function Board(_ref){var grid=_ref.grid,setGrid=_ref.setGrid;var handleTileEvent=function handleTileEvent(i,j){var gridCopy=grid.map(function(arr){return arr.slice();});gridCopy[i][j]=grid[i][j]?false:true;setGrid(gridCopy);};return/*#__PURE__*/_jsxs(\"div\",{className:\"board-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Iteration:\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(\".concat(grid[0].length,\", 20px\"),justifyContent:\"center\"},children:grid.map(function(row,i){return grid[i].map(function(val,j){return/*#__PURE__*/_jsx(BoardButton,{keyID:\"\".concat(i,\"-\").concat(j),tileName:grid[i][j]?\"tile-on\":\"tile-off\",onClick:function onClick(){return handleTileEvent(i,j);}});});})}),/*#__PURE__*/_jsx(\"h1\",{children:\"Cells Alive:\"})]});};export default Board;","map":{"version":3,"sources":["/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Board.tsx"],"names":["React","BoardButton","Board","grid","setGrid","handleTileEvent","i","j","gridCopy","map","arr","slice","display","gridTemplateColumns","length","justifyContent","row","val"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAgC,OAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,QAAxB,CACA,MAAO,cAAP,C,wFAQA,GAAMC,CAAAA,KAA2B,CAAG,QAA9BA,CAAAA,KAA8B,MAAuB,IAApBC,CAAAA,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CAE1D,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAYC,CAAZ,CAA0B,CACjD,GAAIC,CAAAA,QAAqB,CAAGL,IAAI,CAACM,GAAL,CAAS,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,KAAJ,EAAJ,EAAZ,CAA5B,CACAH,QAAQ,CAACF,CAAD,CAAR,CAAYC,CAAZ,EAAiBJ,IAAI,CAACG,CAAD,CAAJ,CAAQC,CAAR,EAAa,KAAb,CAAqB,IAAtC,CACAH,OAAO,CAACI,QAAD,CAAP,CACA,CAJD,CAMA,mBACC,aAAK,SAAS,CAAC,iBAAf,wBACC,kCADD,cAIC,YACC,KAAK,CAAE,CACNI,OAAO,CAAE,MADH,CAENC,mBAAmB,kBAAYV,IAAI,CAAC,CAAD,CAAJ,CAAQW,MAApB,UAFb,CAGNC,cAAc,CAAE,QAHV,CADR,UAOGZ,IAAI,CAACM,GAAL,CAAU,SAACO,GAAD,CAAMV,CAAN,CAAY,CACvB,MACCH,CAAAA,IAAI,CAACG,CAAD,CAAJ,CAAQG,GAAR,CAAa,SAACQ,GAAD,CAAMV,CAAN,CAAY,CACxB,mBACC,KAAC,WAAD,EACC,KAAK,WAAKD,CAAL,aAAUC,CAAV,CADN,CAEC,QAAQ,CAAEJ,IAAI,CAACG,CAAD,CAAJ,CAAQC,CAAR,EAAa,SAAb,CAAyB,UAFpC,CAGC,OAAO,CAAE,yBAAMF,CAAAA,eAAe,CAACC,CAAD,CAAIC,CAAJ,CAArB,EAHV,EADD,CAOA,CARD,CADD,CAWA,CAZC,CAPH,EAJD,cAyBC,oCAzBD,GADD,CA+BA,CAvCD,CAyCA,cAAeL,CAAAA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport BoardButton from './Tile';\nimport \"./styles.css\";\n\n\ninterface BoardProps {\n\tgrid: boolean[][],\n\tsetGrid: (grid: boolean[][]) => void,\n}\n\nconst Board: React.FC<BoardProps> = ({ grid, setGrid }) => {\n\n\tconst handleTileEvent = (i: number, j: number) => {\n\t\tlet gridCopy: boolean[][] = grid.map(arr => arr.slice());\n\t\tgridCopy[i][j] = grid[i][j] ? false : true;\n\t\tsetGrid(gridCopy);\n\t}\n\n\treturn (\n\t\t<div className=\"board-container\">\n\t\t\t<h1>\n\t\t\t\tIteration: \n\t\t\t</h1>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"grid\",\n\t\t\t\t\tgridTemplateColumns: `repeat(${grid[0].length}, 20px`,\n\t\t\t\t\tjustifyContent: \"center\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{ grid.map( (row, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tgrid[i].map( (val, j) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<BoardButton \n\t\t\t\t\t\t\t\t\tkeyID={`${i}-${j}`} \n\t\t\t\t\t\t\t\t\ttileName={grid[i][j] ? \"tile-on\" : \"tile-off\"}\t\n\t\t\t\t\t\t\t\t\tonClick={() => handleTileEvent(i, j)} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}) }\n\t\t\t</div>\n\t\t\t<h1>\n\t\t\t\tCells Alive: \n\t\t\t</h1>\n\t\t</div>\n\t)\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}