{"ast":null,"code":"var _jsxFileName = \"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Graph.tsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Graph = ({\n  iterationArray,\n  cellsAliveArray,\n  showGraph\n}) => {\n  if (!showGraph) return null;\n  const data = {\n    labels: iterationArray,\n    datasets: [{\n      label: 'Game Data',\n      data: cellsAliveArray,\n      fill: false,\n      borderColor: 'rgb(1, 1, 1)',\n      backgroundColor: 'rgb(1, 1, 1)',\n      tension: 0.1\n    }]\n  };\n  const options = {\n    animation: {\n      duration: 0\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this); // if (showGraph) {\n};\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Graph.tsx"],"names":["React","Line","Graph","iterationArray","cellsAliveArray","showGraph","data","labels","datasets","label","fill","borderColor","backgroundColor","tension","options","animation","duration"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAQA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,eAAlB;AAAmCC,EAAAA;AAAnC,CAAD,KAAoD;AACvF,MAAI,CAACA,SAAL,EAAgB,OAAO,IAAP;AAEhB,QAAMC,IAAS,GAAG;AACjBC,IAAAA,MAAM,EAAEJ,cADS;AAEjBK,IAAAA,QAAQ,EAAE,CAAC;AACXC,MAAAA,KAAK,EAAE,WADI;AAEXH,MAAAA,IAAI,EAAEF,eAFK;AAGXM,MAAAA,IAAI,EAAE,KAHK;AAIXC,MAAAA,WAAW,EAAE,cAJF;AAKXC,MAAAA,eAAe,EAAE,cALN;AAMXC,MAAAA,OAAO,EAAE;AANE,KAAD;AAFO,GAAlB;AAYA,QAAMC,OAAO,GAAG;AACfC,IAAAA,SAAS,EAAE;AACVC,MAAAA,QAAQ,EAAE;AADA;AADI,GAAhB;AAMA,sBACC;AAAA,2BACC,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEV,IAAZ;AAAkB,MAAA,OAAO,EAAEQ;AAA3B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD,CArBuF,CA2BvF;AACA,CA5BD;;KAAMZ,K;AA+BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\ninterface GraphProps {\n\titerationArray: number[], \n\tcellsAliveArray: number[],\n\tshowGraph: boolean,\n}\n\nconst Graph: React.FC<GraphProps> = ({ iterationArray, cellsAliveArray, showGraph }) => {\n\tif (!showGraph) return null;\n\n\tconst data: any = {\n\t\tlabels: iterationArray,\n\t\tdatasets: [{\n\t\tlabel: 'Game Data',\n\t\tdata: cellsAliveArray,\n\t\tfill: false,\n\t\tborderColor: 'rgb(1, 1, 1)',\n\t\tbackgroundColor: 'rgb(1, 1, 1)',\n\t\ttension: 0.1,\n\t\t}]\n\t};\n\n\tconst options = {\n\t\tanimation: {\n\t\t\tduration: 0\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Line data={data} options={options} />\n\t\t</div>\n\t)\n\n\t// if (showGraph) {\n}\n\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}