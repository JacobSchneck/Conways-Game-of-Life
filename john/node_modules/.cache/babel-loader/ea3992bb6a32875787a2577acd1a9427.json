{"ast":null,"code":"var _jsxFileName = \"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useRef, useState } from \"react\";\nimport Board from \"./components/Board\";\nimport \"./App.css\";\nimport RunSimulation from \"./components/Controls/RunSimulation\";\nimport SelectSpeed from \"./components/Controls/SelectSpeed\";\nimport GraphButton from \"./components/Controls/GraphButton\";\nimport ClearBoard from \"./components/Controls/ClearBoard\";\nimport { getNextState } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [run, setRun] = useState(false);\n  const [speed, setSpeed] = useState(\"Slow\");\n  const [showGraph, setShowGraph] = useState(false);\n  const [iteration, setIteration] = useState(0);\n  const [cellsAlive, setCellsAlive] = useState(0);\n  const [grid, setGrid] = useState(Array(50).fill(Array(75).fill(0)));\n  const runRef = useRef(run);\n  runRef.current = run;\n  const runGame = useCallback(() => {\n    if (!runRef.current) {\n      return;\n    }\n\n    setGrid(g => getNextState(g));\n    setIteration(i => i + 1);\n    setTimeout(runGame, 101);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"basic-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Conway's Game of Life\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      grid: grid,\n      setGrid: setGrid,\n      iteration: iteration,\n      cellsAlive: cellsAlive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"basic-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container\",\n      children: [/*#__PURE__*/_jsxDEV(RunSimulation, {\n        run: run,\n        setRun: setRun,\n        runRef: runRef,\n        runGame: runGame,\n        iteration: iteration,\n        setIteration: setIteration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ClearBoard, {\n        setGrid: setGrid,\n        setIteration: setIteration,\n        setCellsAlive: setCellsAlive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SelectSpeed, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(GraphButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"35bgZUB35YF3LshJ2cM4TzoiTBo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/App.tsx"],"names":["useCallback","useRef","useState","Board","RunSimulation","SelectSpeed","GraphButton","ClearBoard","getNextState","App","run","setRun","speed","setSpeed","showGraph","setShowGraph","iteration","setIteration","cellsAlive","setCellsAlive","grid","setGrid","Array","fill","runRef","current","runGame","g","i","setTimeout"],"mappings":"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","sourcesContent":["import { useCallback, useRef, useEffect, useState } from \"react\";\n\nimport Board from \"./components/Board\"\nimport \"./App.css\";\nimport RunSimulation from \"./components/Controls/RunSimulation\";\nimport SelectSpeed from \"./components/Controls/SelectSpeed\";\nimport GraphButton from \"./components/Controls/GraphButton\";\nimport ClearBoard from \"./components/Controls/ClearBoard\";\nimport { getNextState } from \"./utils\";\n\ntype Speed = \"Slow\" | \"Medium\" | \"Fast\" | \"Brrr\"; \n\nconst App: React.FC = () => {\n\tconst [run, setRun] = useState<boolean>(false);\n\tconst [speed, setSpeed] = useState<Speed>(\"Slow\");\n\tconst [showGraph, setShowGraph] = useState<boolean>(false);\n\tconst [iteration, setIteration] = useState<number>(0);\n\tconst [cellsAlive, setCellsAlive] = useState<number>(0);\n\tconst [grid, setGrid] = useState<boolean[][]>(Array(50).fill(Array(75).fill(0)))\n\n\tconst runRef = useRef<boolean>(run);\n\trunRef.current = run\n\n\tconst runGame = useCallback(() => {\n\t\tif (!runRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tsetGrid((g) => getNextState(g));\n\t\tsetIteration( (i) => i + 1);\n\t\tsetTimeout(runGame, 101);\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<header className=\"basic-header\">\n\t\t\t\t<h1>\n\t\t\t\t\tConway's Game of Life\n\t\t\t\t</h1>\n\t\t\t</header>\n\t\t\t<Board grid={grid} setGrid={setGrid} iteration={iteration} cellsAlive={cellsAlive}/>\n\t\t\t<header className=\"basic-header\">\n\t\t\t\t<h1>\n\t\t\t\t\tControls\t\n\t\t\t\t</h1>\n\t\t\t</header>\n\t\t\t<div className=\"controls-container\">\n\t\t\t\t<RunSimulation \n\t\t\t\t\trun={run} \n\t\t\t\t\tsetRun={setRun} \n\t\t\t\t\trunRef={runRef} \n\t\t\t\t\trunGame={runGame} \n\t\t\t\t\titeration={iteration} \n\t\t\t\t\tsetIteration={setIteration}\n\t\t\t\t/>\n\t\t\t\t<ClearBoard setGrid={setGrid} setIteration={setIteration} setCellsAlive={setCellsAlive}/>\n\t\t\t\t<SelectSpeed />\n\t\t\t\t<GraphButton />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}