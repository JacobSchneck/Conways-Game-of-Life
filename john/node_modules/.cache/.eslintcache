[{"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/index.tsx":"1","/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/App.tsx":"2","/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Tile.tsx":"3","/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Board.tsx":"4","/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Controls/RunSimulation.tsx":"5","/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Controls/SelectSpeed.tsx":"6","/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Controls/GraphButton.tsx":"7","/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Controls/ClearBoard.tsx":"8","/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/utils.ts":"9","/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Graph.tsx":"10","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/index.tsx":"11","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/App.tsx":"12","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/utils.ts":"13","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Graph.tsx":"14","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Controls/RunSimulation.tsx":"15","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Controls/SelectSpeed.tsx":"16","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Board.tsx":"17","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Controls/GraphButton.tsx":"18","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Controls/ClearBoard.tsx":"19","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Tile.tsx":"20"},{"size":220,"mtime":1632332535310,"results":"21","hashOfConfig":"22"},{"size":3232,"mtime":1632420572590,"results":"23","hashOfConfig":"22"},{"size":320,"mtime":1632412715490,"results":"24","hashOfConfig":"22"},{"size":1313,"mtime":1632412939370,"results":"25","hashOfConfig":"22"},{"size":594,"mtime":1632418640390,"results":"26","hashOfConfig":"22"},{"size":959,"mtime":1632416882800,"results":"27","hashOfConfig":"22"},{"size":427,"mtime":1632417757930,"results":"28","hashOfConfig":"22"},{"size":799,"mtime":1632418971610,"results":"29","hashOfConfig":"22"},{"size":1332,"mtime":1632418714060,"results":"30","hashOfConfig":"22"},{"size":662,"mtime":1632420610800,"results":"31","hashOfConfig":"22"},{"size":220,"mtime":1632425076100,"results":"32","hashOfConfig":"33"},{"size":3232,"mtime":1632425076100,"results":"34","hashOfConfig":"33"},{"size":1332,"mtime":1632425076100,"results":"35","hashOfConfig":"33"},{"size":662,"mtime":1632425076100,"results":"36","hashOfConfig":"33"},{"size":594,"mtime":1632425076100,"results":"37","hashOfConfig":"33"},{"size":959,"mtime":1632425076100,"results":"38","hashOfConfig":"33"},{"size":1313,"mtime":1632425076100,"results":"39","hashOfConfig":"33"},{"size":427,"mtime":1632425076100,"results":"40","hashOfConfig":"33"},{"size":799,"mtime":1632425076100,"results":"41","hashOfConfig":"33"},{"size":320,"mtime":1632425076100,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"a9c1bb",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9k5tqy",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/index.tsx",[],["88","89"],"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/App.tsx",["90","91"],"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Tile.tsx",[],"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Board.tsx",["92"],"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Controls/RunSimulation.tsx",[],"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Controls/SelectSpeed.tsx",["93"],"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Controls/GraphButton.tsx",[],"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Controls/ClearBoard.tsx",["94"],"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/utils.ts",[],"/home/jschneck/programming_projects/JavaScriptProjects/typed-Game-of-life/john/src/components/Graph.tsx",[],"/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/index.tsx",[],"/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/App.tsx",["95","96"],"import { useCallback, useRef, useEffect, useState } from \"react\";\n\nimport Board from \"./components/Board\"\nimport \"./App.css\";\nimport RunSimulation from \"./components/Controls/RunSimulation\";\nimport SelectSpeed from \"./components/Controls/SelectSpeed\";\nimport GraphButton from \"./components/Controls/GraphButton\";\nimport ClearBoard from \"./components/Controls/ClearBoard\";\nimport { getNextState, NextStateType } from \"./utils\";\nimport Speed from \"./types/Speed\";\nimport Graph from \"./components/Graph\";\n\nconst App: React.FC = () => {\n\tconst [run, setRun] = useState<boolean>(false);\n\tconst [speed, setSpeed] = useState<Speed>(\"Slow\");\n\tconst [showGraph, setShowGraph] = useState<boolean>(false);\n\tconst [iteration, setIteration] = useState<number>(0);\n\tconst [cellsAlive, setCellsAlive] = useState<number>(0);\n\tconst [grid, setGrid] = useState<boolean[][]>(Array(50).fill(Array(75).fill(0)))\n\tconst [iterationArray, setIterationArray] = useState<Array<number>>([0]);\n\tconst [cellsAliveArray, setCellsAlliveArray] = useState<Array<number>>([0]);\n\n\tconst runRef = useRef<boolean>(run);\n\trunRef.current = run\n\tconst speedRef = useRef<Speed>(speed);\n\tspeedRef.current = speed;\n\n\tconst runGame = useCallback(() => {\n\t\tif (!runRef.current) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// HACK: jank but it works \n\t\tsetGrid((g) => {\n\t\t\tconst {nextGrid, nextCellsAlive }: NextStateType = getNextState(g);\n\t\t\tsetCellsAlive(nextCellsAlive);\n\t\t\tsetCellsAlliveArray((cellsAliveArray) => [...cellsAliveArray, nextCellsAlive]);\n\t\t\treturn nextGrid;\n\t\t});\n\n\t\tsetIteration( (i) => i + 1); // why does this update everytime but setIteration(i + 1) does not?\n\t\tsetIterationArray((iterationArray) => [...iterationArray, iteration]);\n\n\t\tswitch ( speedRef.current ) {\n\t\t\tcase \"Slow\":\n\t\t\t\tsetTimeout(runGame, 1000);\n\t\t\t\tbreak;\n\t\t\tcase \"Medium\":\n\t\t\t\tsetTimeout(runGame, 500);\n\t\t\t\tbreak;\n\t\t\tcase \"Fast\":\n\t\t\t\tsetTimeout(runGame, 250);\n\t\t\t\tbreak;\n\t\t\tcase \"Brrr\":\n\t\t\t\tsetTimeout(runGame, 100);\n\t\t\t\tbreak;\n\t\t}\n\n\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<header className=\"basic-header\">\n\t\t\t\t<h1>\n\t\t\t\t\tConway's Game of Life\n\t\t\t\t</h1>\n\t\t\t</header>\n\t\t\t<Board \n\t\t\t\tgrid={grid} \n\t\t\t\tsetGrid={setGrid} \n\t\t\t\titeration={iteration} \n\t\t\t\tcellsAlive={cellsAlive}\n\t\t\t\tsetCellsAlive={setCellsAlive}\n\t\t\t/>\n\t\t\t<header className=\"basic-header\">\n\t\t\t\t<h1>\n\t\t\t\t\tControls\t\n\t\t\t\t</h1>\n\t\t\t</header>\n\t\t\t<div className=\"controls-container\">\n\t\t\t\t<RunSimulation \n\t\t\t\t\trun={run} \n\t\t\t\t\tsetRun={setRun} \n\t\t\t\t\trunRef={runRef} \n\t\t\t\t\trunGame={runGame} \n\t\t\t\t/>\n\t\t\t\t<ClearBoard \n\t\t\t\t\tsetGrid={setGrid} \n\t\t\t\t\tsetIteration={setIteration} \n\t\t\t\t\tsetCellsAlive={setCellsAlive}\n\t\t\t\t\tsetIterationArray={setIterationArray}\n\t\t\t\t\tsetCellsAliveArray={setCellsAlliveArray}\n\t\t\t\t/>\n\t\t\t\t<SelectSpeed \n\t\t\t\t\tspeed={speed}\n\t\t\t\t\tsetSpeed={setSpeed}\n\t\t\t\t\tspeedRef={speedRef}\n\t\t\t\t/>\n\t\t\t\t<GraphButton \n\t\t\t\t\tshowGraph={showGraph}\n\t\t\t\t\tsetShowGraph={setShowGraph}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<header className=\"basic-header\">\n\t\t\t\t<h1>\n\t\t\t\t\tGraph\t\n\t\t\t\t</h1>\n\t\t\t</header>\n\t\t\t{/* <div style={{background: \"rgb(250, 119, 119)\"}}> */}\n\t\t\t\t<div className=\"graph-container\">\n\t\t\t\t\t<Graph \n\t\t\t\t\t\titerationArray={iterationArray} \n\t\t\t\t\t\tcellsAliveArray={cellsAliveArray} \n\t\t\t\t\t\tshowGraph={showGraph} \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t{/* </div> */}\n\t\t</div>\n\t)\n}\n\n\nexport default App;","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/utils.ts",[],"/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Graph.tsx",[],"/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Controls/RunSimulation.tsx",[],"/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Controls/SelectSpeed.tsx",["97"],"import React, { useState } from \"react\";\nimport Speed from \"../../types/Speed\"\n\ninterface SelectSpeedProps {\n\tspeed: Speed,\n\tsetSpeed: (speed: Speed) => void, \n\tspeedRef: React.MutableRefObject<Speed>,\n}\n\nconst SelectSpeed: React.FC<SelectSpeedProps> = ({ speed, setSpeed, speedRef }) => {\n\tconst [count, setCount] = useState(0);\n\n\tconst handleSpeedEvent = () => {\n\t\tif (count == 3) {\n\t\t\tsetCount(0);\n\t\t} else {\n\t\t\tsetCount(count + 1);\n\t\t}\n\n\t\tswitch (count % 4) {\n\t\t\tcase 0:\n\t\t\t\tsetSpeed(\"Slow\");\n\t\t\t\tspeedRef.current = \"Slow\";\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tsetSpeed(\"Medium\");\n\t\t\t\tspeedRef.current = \"Medium\";\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tsetSpeed(\"Fast\");\n\t\t\t\tspeedRef.current = \"Fast\";\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tsetSpeed(\"Brrr\");\n\t\t\t\tspeedRef.current = \"Brrr\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<button className=\"control-button\" onClick={() => handleSpeedEvent()}>\n\t\t\t\t{speed}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default SelectSpeed;","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Board.tsx",["98"],"import React, { useState } from 'react';\nimport Tile from './Tile';\nimport \"./styles.css\";\n\n\ninterface BoardProps {\n\tgrid: boolean[][],\n\tsetGrid: (grid: boolean[][]) => void,\n\titeration: number,\n\tcellsAlive: number,\n\tsetCellsAlive: (cellsAlive: number) => void,\n}\n\nconst Board: React.FC<BoardProps> = ({ grid, setGrid, iteration, cellsAlive, setCellsAlive }) => {\n\n\tconst handleTileEvent = (i: number, j: number) => {\n\t\tlet gridCopy: boolean[][] = grid.map(arr => arr.slice());\n\t\tgridCopy[i][j] = grid[i][j] ? false : true;\n\t\tgrid[i][j] ? setCellsAlive(cellsAlive - 1) : setCellsAlive(cellsAlive + 1);\n\t\tsetGrid(gridCopy);\n\t\t\n\t}\n\n\t// TODO: Add Borders around Iteration and CellsAlive header tags\n\treturn (\n\t\t<div className=\"board-container\">\n\t\t\t<h1> \n\t\t\t\tIteration: {iteration}\n\t\t\t</h1>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"grid\",\n\t\t\t\t\tgridTemplateColumns: `repeat(${grid[0].length}, 20px`,\n\t\t\t\t\tjustifyContent: \"center\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{ grid.map( (row, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tgrid[i].map( (val, j) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Tile \n\t\t\t\t\t\t\t\t\tkeyID={`${i}-${j}`} \n\t\t\t\t\t\t\t\t\ttileName={grid[i][j] ? \"tile-on\" : \"tile-off\"}\t\n\t\t\t\t\t\t\t\t\tonClick={() => handleTileEvent(i, j)} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}) }\n\t\t\t</div>\n\t\t\t<h1>\n\t\t\t\tCells Alive: {cellsAlive}\n\t\t\t</h1>\n\t\t</div>\n\t)\n}\n\nexport default Board;","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Controls/GraphButton.tsx",[],"/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Controls/ClearBoard.tsx",["99"],"import React from \"react\";\nimport { setOriginalNode } from \"typescript\";\n\ninterface ClearButtonProps {\n\tsetGrid: (grid: boolean[][]) => void,\n\tsetIteration: (iteration: number) => void,\n\tsetCellsAlive: (cellsAlive: number) => void,\n\tsetIterationArray: (iterationArray: number[]) => void,\n\tsetCellsAliveArray: (cellsAliveArray: number[]) => void,\n}\n\nconst ClearBoard: React.FC<ClearButtonProps> = ({ \n\tsetGrid, \n\tsetIteration, \n\tsetCellsAlive,\n\tsetIterationArray,\n\tsetCellsAliveArray,\n}) => {\n\treturn (\n\t\t<div>\n\t\t\t<button className=\"control-button\" onClick={\n\t\t\t\t() => {\n\t\t\t\t\tsetGrid(Array(50).fill(Array(75).fill(0)))\n\t\t\t\t\tsetIteration(0);\n\t\t\t\t\tsetCellsAlive(0);\n\t\t\t\t\tsetIterationArray([0]);\n\t\t\t\t\tsetCellsAliveArray([0]);\n\t\t\t\t}\n\t\t\t}>\n\t\t\t\tClear\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default ClearBoard;","/home/jschneck/programming_projects/JavaScriptProjects/Conways-Game-of-Life/john/src/components/Tile.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":31,"nodeType":"106","messageId":"107","endLine":1,"endColumn":40},{"ruleId":"108","severity":1,"message":"109","line":60,"column":5,"nodeType":"110","endLine":60,"endColumn":7,"suggestions":"111"},{"ruleId":"104","severity":1,"message":"112","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":14,"column":13,"nodeType":"115","messageId":"116","endLine":14,"endColumn":15},{"ruleId":"104","severity":1,"message":"117","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":1,"column":31,"nodeType":"106","messageId":"107","endLine":1,"endColumn":40},{"ruleId":"108","severity":1,"message":"109","line":60,"column":5,"nodeType":"110","endLine":60,"endColumn":7,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"114","line":14,"column":13,"nodeType":"115","messageId":"116","endLine":14,"endColumn":15},{"ruleId":"104","severity":1,"message":"112","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"117","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":25},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'iteration'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIterationArray' needs the current value of 'iteration'.","ArrayExpression",["121"],"'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setOriginalNode' is defined but never used.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"123","fix":"125"},"Update the dependencies array to be: [iteration]",{"range":"126","text":"127"},{"range":"128","text":"127"},[1963,1965],"[iteration]",[1963,1965]]